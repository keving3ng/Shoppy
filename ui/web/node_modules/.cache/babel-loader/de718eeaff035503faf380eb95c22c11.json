{"ast":null,"code":"var _jsxFileName = \"/home/kevin/code/dbl/ui/spa/src/components/elements/InputRow.js\";\nimport React from \"react\";\nimport NewKeyButton from \"../io/NewKeyButton\";\n\nclass InputRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keyList: this.props.keyList,\n      item: this.props.item,\n      value: \"\",\n      selectedKey: \"key\"\n    };\n\n    this.capIfString = input => {\n      if (typeof input === \"string\") {\n        const cap = input.charAt(0).toUpperCase() + input.slice(1);\n        return cap;\n      }\n\n      return input;\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.onDropdownChange = event => {\n      this.setState({\n        selectedKey: event.target.value\n      });\n    };\n\n    this.onFormSubmit = event => {\n      event.preventDefault();\n      this.props.addNewData(this.state.selectedKey, this.state.value);\n      this.setState({\n        value: \"\",\n        selectedKey: \"\"\n      });\n    };\n\n    this.addKey = key => {\n      this.setState(prevState => ({\n        keyList: [...prevState.keyList, key.toLowerCase()]\n      }));\n    };\n\n    this.renderKeyList = () => {\n      return this.state.keyList.map(key => {\n        if (!Object.keys(this.state.item).includes(key)) {\n          return React.createElement(\"option\", {\n            key: key,\n            value: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, this.capIfString(key));\n        }\n\n        return null;\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(NewKeyButton, {\n      addKey: this.addKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"fifteen wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui equal width form\",\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: this.state.selectedKey,\n      onChange: this.onDropdownChange,\n      className: \"ui selection dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Select or enter a new key\"), this.renderKeyList())), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.onInputChange,\n      placeholder: \"Enter a value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui button\",\n      type: \"submit\",\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Add\"))))));\n  }\n\n}\n\nexport default InputRow;","map":{"version":3,"sources":["/home/kevin/code/dbl/ui/spa/src/components/elements/InputRow.js"],"names":["React","NewKeyButton","InputRow","Component","state","keyList","props","item","value","selectedKey","capIfString","input","cap","charAt","toUpperCase","slice","onInputChange","event","setState","target","onDropdownChange","onFormSubmit","preventDefault","addNewData","addKey","key","prevState","toLowerCase","renderKeyList","map","Object","keys","includes","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewKeyButton from \"../io/NewKeyButton\";\n\nclass InputRow extends React.Component {\n  state = {\n    keyList: this.props.keyList,\n    item: this.props.item,\n    value: \"\",\n    selectedKey: \"key\"\n  };\n\n  capIfString = input => {\n    if (typeof input === \"string\") {\n      const cap = input.charAt(0).toUpperCase() + input.slice(1);\n      return cap;\n    }\n    return input;\n  };\n\n  onInputChange = event => {\n    this.setState({ value: event.target.value });\n  };\n\n  onDropdownChange = event => {\n    this.setState({ selectedKey: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n    this.props.addNewData(this.state.selectedKey, this.state.value);\n    this.setState({ value: \"\", selectedKey: \"\" });\n  };\n\n  addKey = key => {\n    this.setState(prevState => ({\n      keyList: [...prevState.keyList, key.toLowerCase()]\n    }));\n  };\n\n  renderKeyList = () => {\n    return this.state.keyList.map(key => {\n      if (!Object.keys(this.state.item).includes(key)) {\n        return (\n          <option key={key} value={key}>\n            {this.capIfString(key)}\n          </option>\n        );\n      }\n      return null;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"one wide column\">\n            <NewKeyButton addKey={this.addKey} />\n          </div>\n          <div className=\"fifteen wide column\">\n            <form className=\"ui equal width form\" onSubmit={this.onFormSubmit}>\n              <div className=\"fields\">\n                <div className=\"field\">\n                  <select\n                    value={this.state.selectedKey}\n                    onChange={this.onDropdownChange}\n                    className=\"ui selection dropdown\"\n                  >\n                    <option value=\"\">Select or enter a new key</option>\n                    {this.renderKeyList()}\n                  </select>\n                </div>\n\n                <div className=\"field\">\n                  <input\n                    type=\"text\"\n                    value={this.state.value}\n                    onChange={this.onInputChange}\n                    placeholder=\"Enter a value\"\n                  />\n                </div>\n                <button\n                  className=\"ui button\"\n                  type=\"submit\"\n                  onSubmit={this.onFormSubmit}\n                >\n                  Add\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputRow;\n"]},"metadata":{},"sourceType":"module"}