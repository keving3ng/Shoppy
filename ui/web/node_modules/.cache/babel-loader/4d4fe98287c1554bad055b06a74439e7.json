{"ast":null,"code":"var _jsxFileName = \"/home/kevin/code/dbl/src/components/io/EditWindow.js\";\nimport React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport DropDown from \"./DropDown\";\nimport AddNewButton from \"./AddNewButton\";\n\nclass EditWindow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      keys: [\"Apples\", \"Oranges\", \"Pears\"]\n    };\n\n    this.addNewKey = key => {\n      this.setState(prevState => ({\n        keys: [...prevState.keys, key]\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      trigger: React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Add New\"),\n      modal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, close => React.createElement(\"div\", {\n      className: \"modal\",\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" Add New \"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"two wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(AddNewButton, {\n      addNewFunc: this.addNewKey,\n      typeName: \"Key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(DropDown, {\n      data: this.state.keys,\n      typeName: \"Key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"six wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(InputBox, {\n      data: this.state.keys,\n      typeName: \"Key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        console.log(\"Save\");\n        /* this is where I would pass the data up somewhere*/\n\n        close();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        console.log(\"Cancel\");\n        close();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default EditWindow;","map":{"version":3,"sources":["/home/kevin/code/dbl/src/components/io/EditWindow.js"],"names":["React","Popup","DropDown","AddNewButton","EditWindow","Component","state","data","keys","addNewKey","key","setState","prevState","render","close","padding","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB;AAAlB,KAF+B;;AAAA,SAIvCC,SAJuC,GAI3BC,GAAG,IAAI;AACjB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,SAAS,CAACJ,IAAd,EAAoBE,GAApB;AADoB,OAAL,CAAvB;AAGD,KARsC;AAAA;;AAUvCG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhB;AAAgE,MAAA,KAAK,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,IACJ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAE,KAAKN,SAA/B;AAA0C,MAAA,QAAQ,EAAC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE,IAA3B;AAAiC,MAAA,QAAQ,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EASE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAA3B;AAAiC,MAAA,QAAQ,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CAFF,EAiBE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbQ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AACAH,QAAAA,KAAK;AACN,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,QAAAA,KAAK;AACN,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CAjBF,CAFJ,CADF,CADF;AAgDD;;AA3DsC;;AA8DzC,eAAeV,UAAf","sourcesContent":["import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport DropDown from \"./DropDown\";\nimport AddNewButton from \"./AddNewButton\";\n\nclass EditWindow extends React.Component {\n  /* Some test data for now */\n  state = { data: [], keys: [\"Apples\", \"Oranges\", \"Pears\"] };\n\n  addNewKey = key => {\n    this.setState(prevState => ({\n      keys: [...prevState.keys, key]\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Popup trigger={<button className=\"ui button\">Add New</button>} modal>\n          {close => (\n            <div className=\"modal\" style={{ padding: \"10px\" }}>\n              <div className=\"ui header\"> Add New </div>\n              <div className=\"content\">\n                <div className=\"ui grid\">\n                  <div className=\"two wide column\">\n                    <AddNewButton addNewFunc={this.addNewKey} typeName=\"Key\" />\n                  </div>\n\n                  <div className=\"six wide column\">\n                    <DropDown data={this.state.keys} typeName=\"Key\" />\n                  </div>\n\n                  <div className=\"six wide column\">\n                    <InputBox data={this.state.keys} typeName=\"Key\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"actions\">\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    console.log(\"Save\");\n                    /* this is where I would pass the data up somewhere*/\n                    close();\n                  }}\n                >\n                  Save\n                </button>\n\n                <button\n                  className=\"button\"\n                  onClick={() => {\n                    console.log(\"Cancel\");\n                    close();\n                  }}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          )}\n        </Popup>\n      </div>\n    );\n  }\n}\n\nexport default EditWindow;\n"]},"metadata":{},"sourceType":"module"}