{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst fs = require('graceful-fs');\n\nconst isValidExt = file => {\n  if (path.extname(file) !== '.json') {\n    throw new Error('The path provided should end with .json');\n  }\n\n  return true;\n};\n\nconst isValidObj = obj => {\n  const valid = Object.prototype.toString.call(obj) === '[object Object]';\n\n  if (!valid) {\n    throw new Error('The object provided is invalid');\n  }\n\n  return true;\n};\n/**\n * Write to a JSON file sync\n */\n\n\nmodule.exports.writeJSON = function (filename = 'file.json', obj = {}) {\n  isValidExt(filename);\n  isValidObj(obj);\n\n  try {\n    const data = JSON.stringify(obj);\n    fs.writeFileSync(filename, data);\n    return true;\n  } catch (e) {\n    throw e;\n  }\n};\n/**\n * Read from a JSON file sync & parse the JSON\n */\n\n\nmodule.exports.readJSON = function (filename = 'file.json') {\n  isValidExt(filename);\n\n  if (fs.existsSync(filename)) {\n    try {\n      const data = fs.readFileSync(filename, 'utf-8').trim() || {};\n      return JSON.parse(data);\n    } catch (e) {\n      throw e;\n    }\n  } else {\n    throw new Error('The file does not exist');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}