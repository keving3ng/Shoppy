{"ast":null,"code":"import React from \"react\";\nimport InputRow from \"./elements/InputRow\";\n\nclass RowHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: this.props.data,\n      keyList: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.data === undefined || this.state.data.length === 0) {\n      this.setState({\n        keyList: [\"Name\"]\n      });\n    } else {\n      this.setState({\n        keyList: Object.keys(this.props.data)\n      });\n    }\n  }\n\n  render() {\n    return this.state.data.map(item => {\n      console.log(item);\n      /* <InputRow keyList={this.state.keyList} currKey=\"test\" currValue=\"value\" /> */\n    });\n  }\n\n}\n\nexport default RowHandler;","map":{"version":3,"sources":["/home/kevin/code/dbl/ui/src/components/displays/RowHandler.js"],"names":["React","InputRow","RowHandler","Component","state","data","props","keyList","componentDidMount","undefined","length","setState","Object","keys","render","map","item","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAnB;AAAyBE,MAAAA,OAAO,EAAE;AAAlC,KAD+B;AAAA;;AAGvCC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKJ,KAAL,CAAWC,IAAX,KAAoBI,SAApB,IAAiC,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,KAA2B,CAAhE,EAAmE;AACjE,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,CAAC,MAAD;AAAX,OAAd;AACD,KAFD,MAEO;AACL,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAEK,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWD,IAAvB;AAAX,OAAd;AACD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,GAAhB,CAAoBC,IAAI,IAAI;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;AACD,KAHM,CAAP;AAID;;AAhBsC;;AAmBzC,eAAed,UAAf","sourcesContent":["import React from \"react\";\nimport InputRow from \"./elements/InputRow\";\n\nclass RowHandler extends React.Component {\n  state = { data: this.props.data, keyList: [] };\n\n  componentDidMount() {\n    if (this.state.data === undefined || this.state.data.length === 0) {\n      this.setState({ keyList: [\"Name\"] });\n    } else {\n      this.setState({ keyList: Object.keys(this.props.data) });\n    }\n  }\n\n  render() {\n    return this.state.data.map(item => {\n      console.log(item);\n      /* <InputRow keyList={this.state.keyList} currKey=\"test\" currValue=\"value\" /> */\n    });\n  }\n}\n\nexport default RowHandler;\n"]},"metadata":{},"sourceType":"module"}